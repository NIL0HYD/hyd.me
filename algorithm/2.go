package main

import (
	"fmt"
)

/*
【程序2】   题目:判断101-200之间有多少个素数,并输出所有素数。  
1.程序分析:判断素数的方法:用一个数分别去除2到sqrt(这个数),如果能被整除,  
则表明此数不是素数,反之是素数。

素数，又称质数，一个大于1的自然数中，除了1和此整数自身外，没法被其他自然数整除的数；
即是只有两个正因数（1和自己）的自然数。 
比1大但不是素数的数称之为合数, 又称合成数，而1和0既非素数也非合数。素数的属性称为素性，素数在数论中有着非常重要的地位

2，3，5，7，11，13，17，19，23，29，31，37， 
41，43，47，53，59，61，67，71，73，79，83，89， 97，101，103，107，109，113 
*/

func main() {
	for i := 101; i <= 200; i++ {
		if isss(i) {
			fmt.Printf("%d ", i)
		}
	}
}

func isss(x int) bool {
	flag := true
	for i := 2; i < x; i++ {
		if x%i == 0 {
			flag = false
			break
		}
	}

	return flag
}
